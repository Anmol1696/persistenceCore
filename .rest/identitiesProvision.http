POST http://{{PERSISTENCE_CORE_CLIENT_HOST}}:{{PERSISTENCE_CORE_CLIENT_PORT}}/identities/provision
Content-Type: application/json

{
"type": "/xprt/identities/github.com/persistenceOne/persistenceSDK/modules/identities/internal/transactions/provision/transactionRequest",
 "value": {
    "baseReq": {
      "from": "{{ACCOUNT_1_ADDRESS}}",
      "chain_id": "{{CHAIN_ID}}"
    },
    "identityID":"test.XTJ0wkxGAeMlEqfw3Dx9oR6ZlIE=|IWlaJpSQCEHboqlKYYyzLK_Sq2k=",
    "to":"cosmos17e8msgelqjfjcusgln55zxkpr4vhfl73yhwzwp"
  }
}

> {%
   client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
   client.global.set("identitiesProvisionTxHash", JSON.parse(JSON.stringify(response.body)).txhash)
%}

###
GET http://{{PERSISTENCE_CORE_CLIENT_HOST}}:{{PERSISTENCE_CORE_CLIENT_PORT}}/txs/{{identitiesProvisionTxHash}}
Accept: application/json

> {%
   client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
   client.test("Response Code Check", function() {
        client.assert(!JSON.parse(JSON.stringify(response.body)).hasOwnProperty("code") , "Response Code is not 0");
    });
%}

###
